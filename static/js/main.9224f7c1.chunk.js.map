{"version":3,"sources":["App.js","index.js"],"names":["App","state","isClockVisible","clockName","this","className","name","type","onClick","setState","max","Math","floor","random","React","Component","Clock","date","Date","toLocaleTimeString","interval","setInterval","console","log","prevProps","props","clearInterval","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"iNAQMA,E,4MACJC,MAAQ,CACNC,gBAAgB,EAChBC,UAAW,G,uDAGH,IAAD,SAC+BC,KAAKH,MAAnCC,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKE,UAAU,OACb,iDAEGF,GAGH,2CAEGD,GACC,kBAAC,EAAD,CACEA,eAAgBA,EAChBI,KAAMH,IAIV,4BACEE,UAAU,SACVE,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEP,gBAAgB,MAHjD,cAQA,4BACEG,UAAU,SACVE,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEP,gBAAgB,MAHjD,cAQA,4BACEG,UAAU,SACVE,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEN,WAhDrBO,EAgD6C,GA/C1DC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,OAD/C,IAAsBA,IA6CZ,yB,GAzCQI,IAAMC,WAsDXC,EAAb,4MACEf,MAAQ,CACNgB,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,SAAW,KALb,kEAOuB,IAAD,OAClBhB,KAAKgB,SAAWC,aAAY,WAE1BC,QAAQC,KAAI,IAAIL,MAAOC,sBACvB,EAAKV,SAAS,CAAEQ,MAAM,IAAIC,MAAOC,yBAChC,OAZP,yCAeqBK,GAAY,IACrBlB,EAASF,KAAKqB,MAAdnB,KAEJkB,EAAUlB,OAASA,GAErBgB,QAAQC,IAAR,qCAA0CC,EAAUlB,KAApD,eAA+DA,MApBrE,6CAyBIoB,cAActB,KAAKgB,YAzBvB,+BA6BI,OACE,+CACOhB,KAAKH,MAAMgB,KADlB,UA9BN,GAA2BH,IAAMC,WAqCjCC,EAAMW,aAAe,CACnBrB,KAAM,GAOON,QCvGf4B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9224f7c1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.scss';\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          React clock â„–\n          {clockName}\n        </h1>\n\n        <p>\n          Current time:\n          {isClockVisible && (\n            <Clock\n              isClockVisible={isClockVisible}\n              name={clockName}\n            />\n          )}\n\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => this.setState({ isClockVisible: true })}\n          >\n            Show Clock\n          </button>\n\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => this.setState({ isClockVisible: false })}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => this.setState({ clockName: getRandomInt(10) })}\n          >\n            Set random name\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  interval = null;\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      // eslint-disable-next-line\n      console.log(new Date().toLocaleTimeString());\n      this.setState({ date: new Date().toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <>\n        {` ${this.state.date} `}\n      </>\n    );\n  }\n}\n\nClock.defaultProps = {\n  name: 0,\n};\n\nClock.propTypes = {\n  name: PropTypes.number,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}